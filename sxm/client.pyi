from sxm.models import XMChannel as XMChannel
from typing import Any, Callable, Dict, List, Optional, Union

HLS_AES_KEY: Any

class AuthenticationError(Exception): ...
class SegmentRetrievalException(Exception): ...

class SXMClient:
    last_renew: Optional[float]
    password: str
    region: str
    update_handler: Optional[Callable[[dict], None]]
    update_interval: int
    username: str
    def __init__(self, username: str, password: str, region: str = ..., user_agent: Optional[str] = ..., update_handler: Optional[Callable[[dict], None]] = ...) -> None: ...
    @property
    def is_logged_in(self) -> bool: ...
    @property
    def is_session_authenticated(self) -> bool: ...
    @property
    def sxmak_token(self) -> Union[str, None]: ...
    @property
    def gup_id(self) -> Union[str, None]: ...
    @property
    def channels(self) -> List[XMChannel]: ...
    @property
    def favorite_channels(self) -> List[XMChannel]: ...
    def login(self) -> bool: ...
    def authenticate(self) -> bool: ...
    def get_playlist(self, channel_id: str, use_cache: bool = ...) -> Union[str, None]: ...
    def get_segment(self, path: str, max_attempts: int = ...) -> Union[bytes, None]: ...
    def get_channels(self) -> List[dict]: ...
    def get_channel(self, name: str) -> Union[XMChannel, None]: ...
    def get_now_playing(self, channel: XMChannel) -> Union[Dict[str, Any], None]: ...
